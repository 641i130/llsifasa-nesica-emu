@page "/user/{CardId:long}"
@using SharedProject.models
@using SharedProject.enums

<PageTitle>User</PageTitle>
<MudContainer>
    @if (pageLoading)
    {
        <MudSkeleton Width="1184px" Height="57px"/>
        <MudSkeleton Width="1184px" Height="57px"/>
        <MudSkeleton Width="1184px" Height="57px"/>
    }
    else
    {
        if (userDetail is null)
        {
            <MudText Typo="Typo.h3">No Data</MudText>
        }
        else
        {
            <MudExpansionPanels>
                <MudExpansionPanel Text="Total Result">
                    <MudList>
                        <MudListSubheader>Player Name: @userDetail.PlayerName</MudListSubheader>
                        <MudListItem>Total Score: @userDetail.TotalScore</MudListItem>
                        <MudListItem>Average Score: @userDetail.AverageScore</MudListItem>
                        <MudListItem>Played Song Count: @userDetail.PlayedSongCount / @userDetail.TotalSongCount</MudListItem>
                        <MudListItem>Cleared Stage Count: @userDetail.ClearedStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>No Miss Stage Count: @userDetail.NoMissStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>Full Chain Stage Count: @userDetail.FullChainStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>Perfect Stage Count: @userDetail.PerfectStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>S and Above Stage Count: @userDetail.SAboveStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>S+ and Above Stage Count: @userDetail.SPlusAboveStageCount / @userDetail.TotalStageCount</MudListItem>
                        <MudListItem>S++ and Above Stage Count: @userDetail.SPlusPlusAboveStageCount / @userDetail.TotalStageCount</MudListItem>
                    </MudList>
                </MudExpansionPanel>
                <MudExpansionPanel Text="PlayOptions">
                    <MudSelect @bind-Value="@playOption.FastSlowIndicator" 
                               Label="FAST/SLOW show setting">
                        @foreach (var item in Enum.GetValues<PlayOptions.FastSlowIndicator>())
                        {
                            <MudSelectItem Value="@item">@item.GetHelpText()</MudSelectItem>
                        }
                    </MudSelect>

                    <MudSelect @bind-Value="@playOption.FeverTrance" 
                               Label="FEVER/TRANCE show setting">
                        @foreach (var item in Enum.GetValues<PlayOptions.FeverTranceShow>())
                        {
                            <MudSelectItem Value="@item">@item.GetHelpText()</MudSelectItem>
                        }
                    </MudSelect>

                    <MudAutocomplete T="long" Label="Avatar setting"
                                     @bind-Value="@playOption.AvatarId"
                                     CoerceText="true" SearchFunc="@SearchAvatar"
                                     ToStringFunc="@AvatarIdToString"
                                     Dense="true"
                                     MaxItems="@avatarMaxItems">
                        <MoreItemsTemplate>
                            @*<MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                                       OnClick="() => { avatarMaxItems += 10; AvatarAutoComplete.Clear();}">
                                Load more options
                            </MudButton>*@
                            <MudText Align="Align.Center">
                                Only first 50 items are displayed
                            </MudText>
                        </MoreItemsTemplate>
                    </MudAutocomplete>
                    
                    <MudAutocomplete T="long" Label="Navigator setting"
                                     @bind-Value="@playOption.NavigatorId"
                                     CoerceText="true" SearchFunc="@SearchNavigator"
                                     ToStringFunc="@NavigatorIdToString"
                                     Dense="true"
                                     MaxItems="@avatarMaxItems">
                        <MoreItemsTemplate>
                            @*<MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                                                           OnClick="() => { avatarMaxItems += 10; AvatarAutoComplete.Clear();}">
                                                    Load more options
                                                </MudButton>*@
                            <MudText Align="Align.Center">
                                Only first 50 items are displayed
                            </MudText>
                        </MoreItemsTemplate>
                    </MudAutocomplete>
                    
                    <MudAutocomplete T="long" Label="Title setting"
                                     @bind-Value="@playOption.TitleId"
                                     CoerceText="true" SearchFunc="@SearchTitle"
                                     ToStringFunc="@TitleIdToString"
                                     Dense="true"
                                     MaxItems="@avatarMaxItems">
                        <MoreItemsTemplate>
                            @*<MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true"
                                                           OnClick="() => { avatarMaxItems += 10; AvatarAutoComplete.Clear();}">
                                                    Load more options
                                                </MudButton>*@
                            <MudText Align="Align.Center">
                                Only first 50 items are displayed
                            </MudText>
                        </MoreItemsTemplate>
                    </MudAutocomplete>

                    <MudButton Disabled="@isSavingOptions" 
                               OnClick="SaveOptions" 
                               Variant="Variant.Filled" 
                               Color="Color.Info">
                        @if (isSavingOptions)
                        {
                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                            <MudText Class="ms-2">Saving...</MudText>
                        }
                        else
                        {
                            <MudIcon Icon="@Icons.Filled.Save"></MudIcon>
                            <MudText>Save</MudText>
                        }
                    </MudButton>
                </MudExpansionPanel>
                <MudExpansionPanel Text="SongPlayData">
                    <MudDataGrid T="SongPlayData" 
                                 Items="@songPlayDataList" 
                                 Sortable="true" 
                                 Filterable="true">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Played Songs</MudText>
                        </ToolBarContent>
                        <Columns>
                            <Column T="SongPlayData" Sortable="false" Filterable="false">
                                <CellTemplate>
                                    <MudButton Variant="Variant.Outlined" Size="Size.Small"
                                               OnClick="@(() => OnShowDetailsClick(context.Item))">
                                        @(context.Item.ShowDetails ? "Hide" : "Show") Song Play Details
                                    </MudButton>
                                </CellTemplate>
                            </Column>
                            <Column T="SongPlayData" Field="IsFavorite" Sortable="false" Title="Favorite">
                                <CellTemplate>
                                    <MudToggleIconButton Toggled="@context.Item.IsFavorite"
                                                         ToggledChanged="@(() => OnFavoriteToggled(context.Item))"
                                                         Icon="@Icons.Material.Filled.FavoriteBorder"
                                                         Color="@Color.Secondary" 
                                                         Title="Add to favorite"
                                                         ToggledIcon="@Icons.Material.Filled.Favorite" 
                                                         ToggledColor="@Color.Secondary" 
                                                         ToggledTitle="Remove from favorite"/>
                                </CellTemplate>
                            </Column>
                            <Column T="SongPlayData" Field="Title" Title="Song Title"/>
                            <Column T="SongPlayData" Field="Artist" Title="Artist"/>
                            <Column T="SongPlayData" Field="TotalPlayCount" Title="Total Play Count"/>
                            <Column T="SongPlayData" Field="LastPlayTime" Title="Last Play Time"/>
                        </Columns>
                        <ChildRowContent>
                            @if (context.ShowDetails)
                            {
                                <MudTr>
                                    <td colspan="5">
                                        <MudCard Elevation="0">
                                            <MudCardHeader>
                                                <CardHeaderContent>
                                                    <MudText Typo="Typo.body1">Song Play Details</MudText>
                                                </CardHeaderContent>
                                            </MudCardHeader>
                                            <MudCardContent Class="pa-0">
                                                <MudTable Items="@context.SongPlaySubDataList" 
                                                          Context="SongPlayDetail" 
                                                          Elevation="0" 
                                                          Filter="data => data.ClearState != ClearState.NotPlayed">
                                                    <HeaderContent>
                                                        <MudTh>Difficulty</MudTh>
                                                        <MudTh>Clear State</MudTh>
                                                        <MudTh>Play Count</MudTh>
                                                        <MudTh>Rating</MudTh>
                                                        <MudTh>Score</MudTh>
                                                        <MudTh>Max Chain</MudTh>
                                                        <MudTh>Last Play Time</MudTh>
                                                    </HeaderContent>
                                                    <RowTemplate>
                                                        <MudTd DataLabel="Difficulty">@SongPlayDetail.Difficulty</MudTd>
                                                        <MudTd DataLabel="Clear State">
                                                            @(SongPlayDetail.Score != 1000000 ? SongPlayDetail.ClearState : ClearState.Perfect)
                                                        </MudTd>
                                                        <MudTd DataLabel="Play Count">@SongPlayDetail.PlayCount</MudTd>
                                                        <MudTd DataLabel="Rating">@CalculateRating(SongPlayDetail.Score)</MudTd>
                                                        <MudTd DataLabel="Score">@SongPlayDetail.Score</MudTd>
                                                        <MudTd DataLabel="Max Chain">@SongPlayDetail.MaxChain</MudTd>
                                                        <MudTd DataLabel="Last Play Time">@SongPlayDetail.LastPlayTime</MudTd>
                                                    </RowTemplate>
                                                </MudTable>
                                            </MudCardContent>
                                        </MudCard>
                                    </td>
                                </MudTr>
                            }
                        </ChildRowContent>
                        <PagerContent>
                            <MudDataGridPager T="SongPlayData"/>
                        </PagerContent>
                    </MudDataGrid>
                </MudExpansionPanel>
            </MudExpansionPanels>
        }
    }
</MudContainer>